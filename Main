{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2157,"sourceType":"datasetVersion","datasetId":18}],"dockerImageVersionId":30786,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Project Goal: Sentiment Analysis on Amazon Reviews\n\nThis project will cover sentiment analysis in python using two methods.\n1. NLTK - VADER\n2. Huggingface - Robert","metadata":{}},{"cell_type":"markdown","source":"## Approach 1: Natural Language Tool Kit (NLTK)","metadata":{}},{"cell_type":"markdown","source":"#### Step 1 - setting up the environment/data","metadata":{}},{"cell_type":"code","source":"# Importing libraries\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.style.use(\"ggplot\")\n\nimport nltk","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-11-20T14:26:03.274071Z","iopub.execute_input":"2024-11-20T14:26:03.274851Z","iopub.status.idle":"2024-11-20T14:26:06.056481Z","shell.execute_reply.started":"2024-11-20T14:26:03.274636Z","shell.execute_reply":"2024-11-20T14:26:06.055139Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"# Load data\ndf = pd.read_csv(\"/kaggle/input/amazon-fine-food-reviews/Reviews.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:26:07.952665Z","iopub.execute_input":"2024-11-20T14:26:07.953092Z","iopub.status.idle":"2024-11-20T14:26:16.530458Z","shell.execute_reply.started":"2024-11-20T14:26:07.953055Z","shell.execute_reply":"2024-11-20T14:26:16.529035Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"# Preview of data\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:26:18.622894Z","iopub.execute_input":"2024-11-20T14:26:18.623940Z","iopub.status.idle":"2024-11-20T14:26:18.641566Z","shell.execute_reply.started":"2024-11-20T14:26:18.623895Z","shell.execute_reply":"2024-11-20T14:26:18.640312Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"   Id   ProductId          UserId                      ProfileName  \\\n0   1  B001E4KFG0  A3SGXH7AUHU8GW                       delmartian   \n1   2  B00813GRG4  A1D87F6ZCVE5NK                           dll pa   \n2   3  B000LQOCH0   ABXLMWJIXXAIN  Natalia Corres \"Natalia Corres\"   \n3   4  B000UA0QIQ  A395BORC6FGVXV                             Karl   \n4   5  B006K2ZZ7K  A1UQRSCLF8GW1T    Michael D. Bigham \"M. Wassir\"   \n\n   HelpfulnessNumerator  HelpfulnessDenominator  Score        Time  \\\n0                     1                       1      5  1303862400   \n1                     0                       0      1  1346976000   \n2                     1                       1      4  1219017600   \n3                     3                       3      2  1307923200   \n4                     0                       0      5  1350777600   \n\n                 Summary                                               Text  \n0  Good Quality Dog Food  I have bought several of the Vitality canned d...  \n1      Not as Advertised  Product arrived labeled as Jumbo Salted Peanut...  \n2  \"Delight\" says it all  This is a confection that has been around a fe...  \n3         Cough Medicine  If you are looking for the secret ingredient i...  \n4            Great taffy  Great taffy at a great price.  There was a wid...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>ProductId</th>\n      <th>UserId</th>\n      <th>ProfileName</th>\n      <th>HelpfulnessNumerator</th>\n      <th>HelpfulnessDenominator</th>\n      <th>Score</th>\n      <th>Time</th>\n      <th>Summary</th>\n      <th>Text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>B001E4KFG0</td>\n      <td>A3SGXH7AUHU8GW</td>\n      <td>delmartian</td>\n      <td>1</td>\n      <td>1</td>\n      <td>5</td>\n      <td>1303862400</td>\n      <td>Good Quality Dog Food</td>\n      <td>I have bought several of the Vitality canned d...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>B00813GRG4</td>\n      <td>A1D87F6ZCVE5NK</td>\n      <td>dll pa</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1346976000</td>\n      <td>Not as Advertised</td>\n      <td>Product arrived labeled as Jumbo Salted Peanut...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>B000LQOCH0</td>\n      <td>ABXLMWJIXXAIN</td>\n      <td>Natalia Corres \"Natalia Corres\"</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1219017600</td>\n      <td>\"Delight\" says it all</td>\n      <td>This is a confection that has been around a fe...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>B000UA0QIQ</td>\n      <td>A395BORC6FGVXV</td>\n      <td>Karl</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1307923200</td>\n      <td>Cough Medicine</td>\n      <td>If you are looking for the secret ingredient i...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>B006K2ZZ7K</td>\n      <td>A1UQRSCLF8GW1T</td>\n      <td>Michael D. Bigham \"M. Wassir\"</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1350777600</td>\n      <td>Great taffy</td>\n      <td>Great taffy at a great price.  There was a wid...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# This time, checking the first entry in the \"Text\" column (i.e. the first customer review). \n#This is the row that I will be running the sentiment analysis on.\ndf[\"Text\"].values[0]","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:26:21.810884Z","iopub.execute_input":"2024-11-20T14:26:21.811281Z","iopub.status.idle":"2024-11-20T14:26:21.818478Z","shell.execute_reply.started":"2024-11-20T14:26:21.811243Z","shell.execute_reply":"2024-11-20T14:26:21.817279Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"'I have bought several of the Vitality canned dog food products and have found them all to be of good quality. The product looks more like a stew than a processed meat and it smells better. My Labrador is finicky and she appreciates this product better than  most.'"},"metadata":{}}]},{"cell_type":"code","source":"# The data size is massive so, for the sake of efficiency, trimming down the volumn of data\ndf = df.head(1000)\nprint(df.shape)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:26:23.298381Z","iopub.execute_input":"2024-11-20T14:26:23.298835Z","iopub.status.idle":"2024-11-20T14:26:23.320314Z","shell.execute_reply.started":"2024-11-20T14:26:23.298791Z","shell.execute_reply":"2024-11-20T14:26:23.318929Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"(1000, 10)\n","output_type":"stream"},{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"   Id   ProductId          UserId                      ProfileName  \\\n0   1  B001E4KFG0  A3SGXH7AUHU8GW                       delmartian   \n1   2  B00813GRG4  A1D87F6ZCVE5NK                           dll pa   \n2   3  B000LQOCH0   ABXLMWJIXXAIN  Natalia Corres \"Natalia Corres\"   \n3   4  B000UA0QIQ  A395BORC6FGVXV                             Karl   \n4   5  B006K2ZZ7K  A1UQRSCLF8GW1T    Michael D. Bigham \"M. Wassir\"   \n\n   HelpfulnessNumerator  HelpfulnessDenominator  Score        Time  \\\n0                     1                       1      5  1303862400   \n1                     0                       0      1  1346976000   \n2                     1                       1      4  1219017600   \n3                     3                       3      2  1307923200   \n4                     0                       0      5  1350777600   \n\n                 Summary                                               Text  \n0  Good Quality Dog Food  I have bought several of the Vitality canned d...  \n1      Not as Advertised  Product arrived labeled as Jumbo Salted Peanut...  \n2  \"Delight\" says it all  This is a confection that has been around a fe...  \n3         Cough Medicine  If you are looking for the secret ingredient i...  \n4            Great taffy  Great taffy at a great price.  There was a wid...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>ProductId</th>\n      <th>UserId</th>\n      <th>ProfileName</th>\n      <th>HelpfulnessNumerator</th>\n      <th>HelpfulnessDenominator</th>\n      <th>Score</th>\n      <th>Time</th>\n      <th>Summary</th>\n      <th>Text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>B001E4KFG0</td>\n      <td>A3SGXH7AUHU8GW</td>\n      <td>delmartian</td>\n      <td>1</td>\n      <td>1</td>\n      <td>5</td>\n      <td>1303862400</td>\n      <td>Good Quality Dog Food</td>\n      <td>I have bought several of the Vitality canned d...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>B00813GRG4</td>\n      <td>A1D87F6ZCVE5NK</td>\n      <td>dll pa</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1346976000</td>\n      <td>Not as Advertised</td>\n      <td>Product arrived labeled as Jumbo Salted Peanut...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>B000LQOCH0</td>\n      <td>ABXLMWJIXXAIN</td>\n      <td>Natalia Corres \"Natalia Corres\"</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1219017600</td>\n      <td>\"Delight\" says it all</td>\n      <td>This is a confection that has been around a fe...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>B000UA0QIQ</td>\n      <td>A395BORC6FGVXV</td>\n      <td>Karl</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1307923200</td>\n      <td>Cough Medicine</td>\n      <td>If you are looking for the secret ingredient i...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>B006K2ZZ7K</td>\n      <td>A1UQRSCLF8GW1T</td>\n      <td>Michael D. Bigham \"M. Wassir\"</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1350777600</td>\n      <td>Great taffy</td>\n      <td>Great taffy at a great price.  There was a wid...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"##### Explatory Data Analysis (EDA)","metadata":{}},{"cell_type":"code","source":"df[\"Score\"].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:26:25.626612Z","iopub.execute_input":"2024-11-20T14:26:25.628055Z","iopub.status.idle":"2024-11-20T14:26:25.644225Z","shell.execute_reply.started":"2024-11-20T14:26:25.628004Z","shell.execute_reply":"2024-11-20T14:26:25.642959Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"Score\n5    642\n4    138\n1     98\n3     75\n2     47\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# Plot a bar chart\ncounts = df[\"Score\"].value_counts().sort_index()\n\nplt.figure(figsize=(8, 6)) \nplt.bar(counts.index, counts.values,color='goldenrod')\nplt.title(\"Count of Review by Stars\")\nplt.xlabel(\"Review Stars\")\nplt.ylabel(\"Count\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:26:27.046817Z","iopub.execute_input":"2024-11-20T14:26:27.047210Z","iopub.status.idle":"2024-11-20T14:26:27.438039Z","shell.execute_reply.started":"2024-11-20T14:26:27.047174Z","shell.execute_reply":"2024-11-20T14:26:27.436016Z"},"trusted":true},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":"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gLUIuwAAALAWYRcAAADWIuwCAADAWoRdAAAAWIuwCwAAAGsRdgEAAGAtf28X8HPZ2dn63//9X3399dc6ffq0IiMjNWLECDVu3FiSZIzRokWLtHLlSuXn56t58+YaOnSooqKi3Mc4efKk5syZo82bN8vhcOjGG2/UQw89pKCgIG9dFgAAALzAp0Z2T548qfHjx8vf319jxozRn/70Jw0YMEChoaHubT788EN98sknGjZsmF544QUFBgZqypQpOnPmjHub119/XYcPH9a4ceM0evRo7d69W2+99ZY3LgkAAABe5FNh98MPP1Tt2rU1YsQINWnSRHXr1lXbtm0VGRkp6adR3Y8//lj33HOP2rVrp9jYWD366KPKycnRxo0bJUlHjhzR119/rYcfflhNmzZV8+bNNXjwYK1bt07Z2dnevDwAAABcYT41jWHTpk1q27atXnnlFe3atUu1atXSrbfequ7du0uSjh07ptzcXLVp08a9T0hIiJo0aaL09HR16tRJ6enpCg0NdU97kKTWrVvL4XBo3759at++fanzulwuuVwu97LD4VBwcLD7a5Sv5P5wn+xBn9qJfrUPfQpf46vfiz4Vdo8dO6bly5frzjvvVO/evbV//37NnTtX/v7+6tKli3JzcyVJYWFhHvuFhYW51+Xm5qpGjRoe66tVq6bq1au7t/m5xYsXKzU11b0cHx+vadOmqU6dOlV2bbYrGX2HPehTO9Gv9qFPy7bX2wVchc79/JQv8amwW1xcrMaNGyslJUXST6Hz0KFDWr58ubp06XLZztu7d2/17NnTvVzym0lWVpaKioou23lt4HA4FBkZqczMTBljvF0OqgB9aif61T70KXxNRkbGFT2fv7//RQ1M+lTYrVmzpmJiYjzaYmJi9OWXX0qSwsPDJUl5eXmqWbOme5u8vDzFxcW5tzlx4oTHMc6ePauTJ0+69/85p9Mpp9NZ5jp+gFwcYwz3yjL0qZ3oV/vQp/AVvvp96FMfUGvWrJmOHj3q0Xb06FF3aq9bt67Cw8O1fft29/qCggLt27dPCQkJkqSEhATl5+frwIED7m127NghY4yaNGlyBa4CAAAAvsKnwu6dd96pvXv36v3331dmZqbWrFmjlStXqkePHpJ++pPNHXfcoffff1+bNm3SoUOH9MYbb6hmzZpq166dpJ9GghMTE/XWW29p37592rNn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kJaWpjfffNO97Ofnp7CwMLVp00b333+/atWq5cXqrpxNmzZpyZIl+v7771VYWKjw8HA1atRIXbt2VWJioqSfXnW6YsUKtW/fXnFxcV6tFwB+jrALAOfRp08f1a1bVy6XS3v37lVaWpr27Nmj6dOnKyAg4LKc8+abb1bHjh3ldDovy/Ev1kcffaT//d//VcuWLXX33XcrMDBQmZmZ2r59u9auXesOuzk5OUpNTVXdunUJuwB8DmEXAM4jKSlJjRs3liR169ZN11xzjT788ENt2rRJHTt2vCzn9PPzu2xB+mKdPXtW//jHP9SmTRuNGzeu1Pq8vLzLXkNhYaGCgoIu+3kA2I05uwBQAS1atJAk/fDDDx7t33//vaZPn66HHnpI/fv31+jRo7Vp0yb3+v3796tPnz5KS0srdcyvv/5affr00ebNmyWVP2f3q6++0rPPPqsHH3xQAwYM0NSpU3X48GH3+k2bNqlPnz767rvv3G1ffPGF+vTpo5dfftnjWE8++aT+9Kc/lXudP/74o06dOqVmzZqVuT4sLEyStHPnTv3hD3+QJL355pvq06ePx3Xu3r1br7zyih555BGlpKTokUce0bx583TmzBmP482YMUMPPvigMjMzNXXqVA0YMECvv/66JCkjI0Mvv/yyhg0bpv79++vhhx/Wq6++qoKCgnLrB4AShF0AqICSABoaGupuO3z4sMaOHavvv/9ed999tx588EEFBgbqpZde0oYNGyRJjRs3Vr169bR+/fpSx1y3bp1CQ0PVtm3bcs+7evVqvfjiiwoKClL//v1177336siRI3r22WfdNTVv3lwOh0O7d+9277dnzx45HA7t2bPH3XbixAl9//337uBelho1aiggIECbN2/WyZMny92ufv366tOnjySpe/fuevTRR/Xoo4+6j71+/XqdPn1at956qwYPHqy2bdtq6dKleuONN0odq7i4WFOmTFGNGjX04IMPqkOHDioqKtKUKVO0d+9e3X777RoyZIi6d++uH374Qfn5+eXWBQAlmMYAAOdRUFCgEydOuOfspqamyul06vrrr3dvM2/ePEVERGjq1KnuebY9evTQs88+q7/97W9q3769JOmmm27SkiVLdPLkSVWvXl2SVFRUpI0bN6p9+/by9y/7R3JhYaHmzp2rrl27avjw4e725ORkPfHEE1q8eLGGDx+u6tWr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"},"metadata":{}}]},{"cell_type":"markdown","source":"#### Step 2: VADER Sentiment Scoring\n\nGoal: use NLTK's `SentimentIntensityAnalyzer` to get the scores of the \"Text\"\n\n- `SentimentIntensityAnalyzer` is part of the VADER (Valence Aware Dictionary and sEntiment Reasoner)\n- `.polarity_scores`: Return a float for sentiment strength based on the input text.\n    - This returns a dictionary containing: negative sentiment proportion (neg), neutral sentiment proportion (neu), positive sentiment proportion (pos), and overall sentiment score (compount).\n    - The return ranges from 0 to 1 for each of *neg*, *neu* and *pos*. The sum across neg, neu and pos always equal 1.\n    - The return ranges from -1 to 1 for *compound*, with the sign corresponding to the overall sentiment.","metadata":{}},{"cell_type":"code","source":"from nltk.sentiment import SentimentIntensityAnalyzer\nfrom tqdm.notebook import tqdm # For adding progress bars to loops, etc\n\nsia = SentimentIntensityAnalyzer() # Create a sia object that can be run on different text","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:26:34.791822Z","iopub.execute_input":"2024-11-20T14:26:34.793117Z","iopub.status.idle":"2024-11-20T14:26:34.806298Z","shell.execute_reply.started":"2024-11-20T14:26:34.793060Z","shell.execute_reply":"2024-11-20T14:26:34.804811Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"# Demonstration of .polarity_scores()works - using a positive message.\nsia.polarity_scores(\"Today is a good day!\")","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:26:36.788348Z","iopub.execute_input":"2024-11-20T14:26:36.788760Z","iopub.status.idle":"2024-11-20T14:26:36.796063Z","shell.execute_reply.started":"2024-11-20T14:26:36.788708Z","shell.execute_reply":"2024-11-20T14:26:36.794846Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"{'neg': 0.0, 'neu': 0.484, 'pos': 0.516, 'compound': 0.4926}"},"metadata":{}}]},{"cell_type":"code","source":"# Demonstration of .polarity_scores()works - using a negative message.\nsia.polarity_scores(\"This past week has been the worst week of my life.\")","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:28:30.659681Z","iopub.execute_input":"2024-11-20T14:28:30.660124Z","iopub.status.idle":"2024-11-20T14:28:30.668610Z","shell.execute_reply.started":"2024-11-20T14:28:30.660086Z","shell.execute_reply":"2024-11-20T14:28:30.667273Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"{'neg': 0.291, 'neu': 0.709, 'pos': 0.0, 'compound': -0.6249}"},"metadata":{}}]},{"cell_type":"code","source":"# Now, run the polarity score on the entire dataset.\nscore_result = {}\n\n# Run a for loop to store the ID and Polarity Score of each text into a new dictionary\nfor i, row in tqdm(df.iterrows(),total = len(df)):\n    text = row[\"Text\"]\n    ID = row[\"Id\"]\n    score_result[ID] = sia.polarity_scores(text)","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:32:48.202127Z","iopub.execute_input":"2024-11-20T14:32:48.202504Z","iopub.status.idle":"2024-11-20T14:32:49.273303Z","shell.execute_reply.started":"2024-11-20T14:32:48.202473Z","shell.execute_reply":"2024-11-20T14:32:49.271932Z"},"trusted":true},"execution_count":34,"outputs":[{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/1000 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cf435094ebb9455580eff2a7b5921155"}},"metadata":{}}]},{"cell_type":"code","source":"# Create a new df based on the new dict, rename the index, and then merge back to the main df\nvaders = pd.DataFrame(score_result).T\nvaders = vaders.reset_index().rename(columns = {\"index\":\"Id\"}) # Update the col name to aid with merge\nvaders = vaders.merge(df,how = \"left\")","metadata":{"execution":{"iopub.status.busy":"2024-11-20T14:33:22.484165Z","iopub.execute_input":"2024-11-20T14:33:22.484529Z","iopub.status.idle":"2024-11-20T14:33:22.520024Z","shell.execute_reply.started":"2024-11-20T14:33:22.484493Z","shell.execute_reply":"2024-11-20T14:33:22.518818Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"        neg    neu    pos  compound\n1     0.000  0.695  0.305    0.9441\n2     0.079  0.853  0.068   -0.1027\n3     0.091  0.754  0.155    0.8265\n4     0.000  1.000  0.000    0.0000\n5     0.000  0.552  0.448    0.9468\n...     ...    ...    ...       ...\n996   0.026  0.721  0.253    0.9788\n997   0.000  0.786  0.214    0.9309\n998   0.000  0.673  0.327    0.9634\n999   0.063  0.874  0.062   -0.0129\n1000  0.040  0.917  0.043   -0.2023\n\n[1000 rows x 4 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>neg</th>\n      <th>neu</th>\n      <th>pos</th>\n      <th>compound</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.000</td>\n      <td>0.695</td>\n      <td>0.305</td>\n      <td>0.9441</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.079</td>\n      <td>0.853</td>\n      <td>0.068</td>\n      <td>-0.1027</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.091</td>\n      <td>0.754</td>\n      <td>0.155</td>\n      <td>0.8265</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.000</td>\n      <td>1.000</td>\n      <td>0.000</td>\n      <td>0.0000</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.000</td>\n      <td>0.552</td>\n      <td>0.448</td>\n      <td>0.9468</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>996</th>\n      <td>0.026</td>\n      <td>0.721</td>\n      <td>0.253</td>\n      <td>0.9788</td>\n    </tr>\n    <tr>\n      <th>997</th>\n      <td>0.000</td>\n      <td>0.786</td>\n      <td>0.214</td>\n      <td>0.9309</td>\n    </tr>\n    <tr>\n      <th>998</th>\n      <td>0.000</td>\n      <td>0.673</td>\n      <td>0.327</td>\n      <td>0.9634</td>\n    </tr>\n    <tr>\n      <th>999</th>\n      <td>0.063</td>\n      <td>0.874</td>\n      <td>0.062</td>\n      <td>-0.0129</td>\n    </tr>\n    <tr>\n      <th>1000</th>\n      <td>0.040</td>\n      <td>0.917</td>\n      <td>0.043</td>\n      <td>-0.2023</td>\n    </tr>\n  </tbody>\n</table>\n<p>1000 rows × 4 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}